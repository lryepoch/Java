
·如何向脚本传递参数？

·如何在脚本中使用参数？
	第一个参数 : $1，第二个参数 : $2

·如何计算传递进来的参数？
$#

·如何在脚本中获取脚本名称？
$0

·如何检查之前的命令是否运行成功？
$?

·如何获取文件的最后一行？
tail-1

·如何获取文件的第一行？
head-1

·如何获取一个文件每一行的第三个元素？
awk'{print $3}'
awk文件匹配


·假如文件中每行第一个元素是FIND，如何获取第二个元素？
awk'{ if ($1 == "FIND") print $2}'

·如何调试bash脚本？
将-xv参数加到#!/bin/bash后

·举例如何写一个函数？
function example{
	echo "hello world!"
}

·如何连接两个字符串？
V1="Hello"
V2="World"
V3=${V1}${V2}
echo $V3

输出：HelloWorld

·如何进行两个整数相加？
V1=1
V2=2
let V3=$V1+$V2
echo $V3

输出：3

let命令是BASH中用于计算的工具，用于执行一个或多个表达式，变量计算中不需要加上 $ 来表示变量。如果表达式中包含了空格或其他特殊字符，则必须引起来。


·如何检查文件系统中是否存在某个文件？
if [ -f /var/log/messages ]
then
echo "File exists"
fi


·shell脚本中所有循环语法？
for循环：
foriin$(ls);do
echo item:$i
done

while循环：
#!/bin/bash
COUNTER=0
while [ $COUNTER -lt 10 ]; do
echo The counter is $COUNTER
let COUNTER=COUNTER+1
done

until循环：
#!/bin/bash 
COUNTER=20
until [ $COUNTER -lt 10 ]; do
echo COUNTER $COUNTER
let COUNTER-=1
done

·每个脚本开始的#!/bin/sh或者#!/bin/bash表示什么意思？
这一行说明要使用的shell。
#!/bin/bash 表示脚本使用 /bin/bash。
对于 python 脚本，就是 #!/usr/bin/python。


·如何获取文本文件的第10行？
head -10 file|tail -1

·bash脚本文件的第一个符号是什么？
#

·命令：[ -z "" ] && echo 0 || echo 1的输出是什么？
0

·命令"export"有什么用？
使变量在子shell中可用。

·如何在后台运行脚本？
在脚本后面添加"&"。

·"chmod 500 script"做什么？
使得脚本所有者拥有可执行权限。

·">"做什么？
重定向输出流到文件或另一个流。

·&和&&区别？
&-希望脚本在后台运行的时候使用它
&&-当前一个脚本成功完成才执行后面的命令/脚本的时候使用它


·命令:name=John && echo 'My name is $name'的输出是什么
variable

·bash shell脚本中哪个符号用于注释？
#

·命令:echo ${new:-variable}的输出是什么？
variable

·'和"有什么区别？
'-当我们不希望把变量转换为值的时候使用它；
"-会计算所有变量的值并用值代替；


·如何在脚本文件中重定向标准输出和标准错误流到log.txt文件？
在脚本文件中添加"exec >log.txt 2>&1"命令。

2>&1应该分成两个部分来看，一个是2>以及另一个是&1，

其中2>就是将标准出错重定向到某个特定的地方；&1是指无论标准输出在哪里。

所以2>&1的意思就是说无论标准出错在哪里(哪怕是没有?)，都将标准出错重定向到标准输出中。


·如何只用echo命令获取字符串变量的一部分？
echo ${variable:x:y}
x-起始位置
y-长度

·如果给定字符串 variable="User:123:321:/home/dir"，如何只用echo命令获取home_dir?
echo ${variable#*:*:*:}或者echo ${variable##*:}

·如何从上面的字符串获取"User"？
echo ${variable%%:*}

·如何使用awk列出UID小于100的用户？
awk -F: '$3<100' /etc/passwd

·写程序为用户计算主组数目并显示次数和组名：
cat /etc/passwd|cut -d: -f4|sort|uniq -c|while read c g
do
{ echo $c;grep :$g: /etc/group|cut -d: -f1;}|xargs -n 2
done

·如何在bash shell中更改标准的域分隔符为":"?
IFS=":"

·如何获取变量长度？
${#variable}

·如何打印变量的最后5个字符？
echo ${variable: -5}

·${variable:-10}和${variable: -10}有什么区别？

${variable:-10} - 如果之前没有给 variable 赋值则输出 10；如果有赋值则输出该变量

${variable: -10} - 输出 variable 的最后 10 个字符


·如何只用echo命令替换字符串的一部分？
echo ${variable//pattern/replacement}

·哪个命令将命令替换为大写？
tr '[:lower:]' '[:upper:]'

·如何计算本地用户数目？
wc -l /etc/passwd|cut -d" " -f1 或者 cat /etc/passwd|wc -l

·不用wc命令如何计算字符串中的单词数目？
set ${string}
echo $#

·"export $variable"或"export variable"哪个正确？
export variable

·如何列出第二个字母是a或b的文件？
ls -d ?[ab]*

·如何将整数a加到b并赋值给c?
c=$((a+b))或c=`expr $a + $b`或c=`echo "$a+$b"|bc`


·如何去除字符串中所有的空格？
echo $string|tr -d " "


·重写这个命令，将输出变量转换为复数：item="car";echo "I like $item"？
item="car"; echo "I like ${item}s"


·写出输出数字0到100中3的倍数(0 3 6 9……)的命令？
for i in {0..100..3}; 
do 
echo $i; 
done
或者
for((i=0; i<=100; i=i+3 ));
do 
echo "Welcome $i times";
done

·如何打印传递给脚本的所有参数？
echo $* 或 echo $@

·[ $a == $b ]和[ $a -eq $b ]有什么区别？
[ $a == $b ] - 用于字符串比较
[ $a -eq $b ] - 用于数字比较

·=和==有什么区别吗？
= - 用于为变量赋值
== - 用于字符串比较

·写出测试$a是否大于12的命令？
[ $a -gt 12 ]

·写出测试$b是否小于等于12的命令？
[ $b -le 12 ]

·如何检查字符串是否以字母"abc"开头？
[[ $string == abc* ]]

·[[ $string == abc* ]]和[[ $string == "abc*" ]]有什么区别？
[[ $string == abc* ]] - 检查字符串是否以字母 abc 开头
[[ $string == "abc" ]] - 检查字符串是否完全等于 abc

·如何列出以ab或xy开头的用户名？
egrep "^ab|^xy" /etc/passwd|cut -d: -f1

·bash中$!表示什么意思？
后台最近执行命令的PID。

·$?表示什么意思？
前台最近命令的结束状态。

·如何输出当前shell的PID?
echo $$

·如何获取传递给脚本的参数数目？
echo $#

·$*和$@有什么区别吗？
$*-以一个字符串形式输出所有传递到脚本的参数
$@-以$IFS为分隔符列出所有传递到脚本中的参数

·如何在bash中定义数组？
array=("Hi" "my" "name" "is")

·如何打印数组的第一个元素？
echo ${array[0]}

·如何打印数组的所有元素？
echo ${array[@]}

·如何输出所有数组的索引？
echo ${!array[@]}

·如何移除数组中索引为2的元素？
unset array[2]

·如何在数组中添加id为333的元素？
array[333]="New_element"

·shell脚本如何获取输入的值？
a)通过参数：./script param1 param2
b)通过read命令：read -p "Destination backup Server：" desthost

·在脚本中如何使用"expect"?
/usr/bin/expect << EOD
spawn rsync -ar ${line} ${desthost}:${destpath}
expect "*?assword:*"
send "${password}\r"
expect eof
EOD 


·可以在shell脚本中使用哪些类型的变量?

答：在shell脚本，我们可以使用两种类型的变量：

系统定义变量
用户定义变量

系统变量是由系统系统自己创建的。这些变量通常由大写字母组成，可以通过“set”命令查看。

用户变量由系统用户来生成和定义，变量的值可以通过命令“echo $<变量名>”查看。


·如何将标准输出和错误输出同时重定向到同一位置？
2>&1 eg：# ls /usr/share/doc > out.txt 2>&1

&>   eg：# ls /usr/share/doc &> out.txt


·$?用途：检查前一命令的结束状态；
如果是0，说明前一个命令执行成功。
如果结束状态不是0，说明命令执行失败。

·shell脚本中break命令的作用 ?
答：break命令一个简单的用途是退出执行中的循环。我们可以在while和until循环中使用break命令跳出循环。


·shell脚本中continue命令的作用 ?
答：continue命令不同于break命令，它只跳出当前循环的迭代，而不是整个循环。continue命令很多时候是很有用的，例如错误发生，但我们依然希望继续执行大循环的时候。


·如何使脚本可执行 ?
答：使用chmod命令来使脚本可执行。例子如下：
# chmod a+x myscript.sh


·#!/bin/bash的作用 ?
答：#!/bin/bash是shell脚本的第一行，称为释伴（shebang）行。这里#符号叫做hash，而!叫做 bang。它的意思是命令通过/bin/bash 来执行。


·shell脚本如何比较字符串?
答：test命令可以用来比较字符串。测试命令会通过比较字符串中的每一个字符来比较。


·如何让 shell 就脚本得到来自终端的输入?
答：read命令可以读取来自终端（使用键盘）的数据。read命令得到用户的输入并置于你给出的变量中。例子如下：

# vi /tmp/test.sh
#!/bin/bash
echo ‘Please enter your name’
read name
echo “My Name is $name”

# ./test.sh
Please enter your name
LinuxTechi
My Name is LinuxTechi


·如何取消变量或取消变量赋值 ?

答：“unset”命令用于取消变量或取消变量赋值。语法如下所示：

# unset <变量名>


·如何执行算术运算 ?

答：有两种方法来执行算术运算：

1.使用expr命令（# expr 5 + 2）

2.用一个美元符号和方括号（$[ 表达式 ]）例如：test=$[16 + 4] ; test=$[16 + 4]


·linux向文件末尾追加命令：
>>是追加，>是删除原有内容，添加