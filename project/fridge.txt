
操作excel：

反射：https://www.jianshu.com/p/9be58ee20dee


comparator比较器：


Token：Token是在服务端产生的。如果前端使用用户名/密码向服务端请求认证，服务端认证成功，那么在服务端会返回Token给前端。前端可以在每次请求的时候带上Token证明自己的合法地位。
		如果这个 Token 在服务端持久化（比如存入数据库），那它就是一个永久的身份令牌。


<T1,T2> 泛型；


PropertyUtils.copyProperties();


-------------------------

·实体类之间的转换：
	··新建一个工具类用于转换；（BeanUtils.copyProperties(obj1,obj2)&&PropertyUtils.copyProperties(obj1,obj2)）
	··在新建类中初始化构造方法；（实体之间的转换，集合之间的转换依赖于实体之间的转换）



·mybatis中如何映射实体类
	··调用@Param注解
	··在xml文件中使用parameterType


·查：Get	无注解
·增：Post	@RequestBody
·改：Post	@RequestBody
·删：Post	@RequestParam



·postman的使用：
	··传入一个参数【get】：3种
						(1)Params：输入传入参数的key和value；（可以带参数，但必须捆绑在链接上）
						(2)Body：
							@RequestParam + form-data：键值对
							@RequestParam + x-www-form-urlencoded      将表单数据编码为(name1=value1&name2=value2…)

	··传入页码，每页记录条数这属于发起get请求；

	··传入一个对象【post】：1种
						Body：row(application/json)->json



·后端数据处理：
	··接口多次命中数据库
	··一次性拿数据+递归整理



·mybatis别名配置：
	··当实体类中的字段与数据库表中的字段不匹配时（不符合驼峰等），需要使用as来定义别名。
	··在xml配置文件中自己定义一个resultMap实现别名配置。



·根据一张表的id删除两张有共同型号的表的数据时，要建立两张表之间的联系，即：where a表.共同字段=b表.共同字段；


·截取字符串用的是subString()，截取集合用的是subList()；


·输入一个数组参数，最后要总体删除。需要先将数组转换成集合：new ArrayList<>(Arrays.asList(ids))


·mybatis mapper接口传递一个集合。默认参数名为list；如果更改为其他的参数名，需要添加@Param注解。


·@Autowired和@Resource之间的区别：
	@Autowired注解是按类型装配依赖对象，默认情况下它要求依赖对象必须存在，如果允许null值，可以设置它required属性为false。
	@Resource注解和@Autowired一样，也可以标注在字段或属性的setter方法上，但它默认按名称装配。名称可以通过@Resource的name属性指定，如果没有指定name属性，当注解标注在字段上，即默认取字段的名称作为bean名称寻找依赖对象，当注解标注在属性的setter方法上，即默认取属性名作为bean名称寻找依赖对象。
	@Resources按名字，是ＪＤＫ的，@Autowired按类型，是Ｓｐｒｉｎｇ的。



·常见格式化时间的方法：
	··SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String date = df.format(new Date());

	··String date = Timestamp.valueOf(LocalDateTime.now());



·常见分页功能的实现方式：
	··插件；
		[mybatis]pagehelper，[jpa]Pageable；pageHelper不支持一对多结果嵌套；

	··自行封装；
		定义一个Page<T>，有currentPage/pageSize/total/recordList/pageNum/, 根据sql语句的limit (currentRecord-1)*pageSize,pageSize; 对需要的字段拼接出来；


·如何处理图片问题：
	··存到数据库；存放图片路径；
	··存到服务器；上传图片到服务器；



·程序中如何获取实时时间：
	··数据库字段默认设置为 CURRENT_TIMESTAMP
	··在sql语句中对时间赋值 now()
	··在代码中调用 setter()



·fridge权限设计：
	1.设计好数据库的request_url，包括页面和操作；
	2.用户单点登录时，找出当前用户可以访问的全部url，更新进权限校验拦截器中；
	3.当前用户请求某个路径时，判断权限校验拦截器中是否包含当前请求的url，如果有，则返回true，拦截通过。




pom.xml->application.yml->entity(实体，返回的数据对象)->
----------------------
·自定义数据源；
·swagger接口文档；
·实体转换器（单个对象转换，对象集合转换）开花了：查询数据库时先查全部字段，然后再service层根据需要进行对象拷贝，最后返回即可。
·对象拷贝
·注解切面
·用户跟角色关联，角色跟权限关联；
