
·Spring Boot读取配置文件：
	方式一：@Value
	方式二：Environment
	  		使用@Autowired引入，然后调用getProperty(String key)即可。

	方式三：实体@Configuration


·多数据源配置：



·mybatis foreach item与index：item代表的是list里面的各个成员，就是一个别名，而index则表示迭代的次数，简单说就是找#{item}这个值找了几次。


·jks证书的绝对路径如何优化成相对路径；
	InputStream resourceAsStream = JksConfig.class.getResourceAsStream("/cm-auto-in_cluster_truststore.jks");

	props.load(new FileInputStream("db.properties")); 是读取当前目录的db.properties文件；

	getClass.getResourceAsStream("db.properties"); 是读取当前类所在位置一起的db.properties文件；

	getClass.getResourceAsStream("/db.properties"); 是读取ClassPath的根的db.properties文件,注意ClassPath如果是多个路径或者jar文件的,只要在任意一个路径目录下或者jar文件里的根下都可以,如果存在于多个路径下的话,按照ClassPath中的先后顺序,使用先找到的,其余忽略；



·枚举类：
	··可以有两个属性：code，name；
	··可以根据name得到code；




·对字符串进行加密：
	String s1="xxx";
	MessageDigest md5 = MessageDigest.getInstance("MD5");
	byte[] bytes = md5.digest(s1.getBytes());
	String s2 = Base64.getEncoder().encodeToString(bytes);

	Base64
	可逆性。
	可以将图片等二进制文件转换为文本文件。
	可以把非ASCII字符的数据转换成ASCII字符，避免不可见字符。

	MD5
	不可逆性。
	任意长度的明文字符串，加密后得到的密文字符串是长度固定的。




·发起请求：
	String result = HttpRequest.post(url).addHeaders(map).body(string).execute().body();
	or
	HttpRequest request = HttpUtil.createPost(url);
	String result = request.addHeaders(map).body(string).execute().body();
	or
	CloseableHttpClient httpClient = HttpClientBuilder.create().build();
	HttpGet httpGet = new HttpGet(url);
	CloseableHttpResponse httpResponse = httpClient.execute(httGet);
	HttpEntity entity = httpResponse.getEntity();
	String result = EntityUtils.toString(entity,"utf-8");


·对于日期范围的判断，直接有‘>’、‘<’即可；




·一个controller控制多个service；【自定义注解】


·全局异常捕获：@ControllerAdvice + @ExceptionHandler



·定时器：@Scheduled(cron = "秒 分 时 日 月 周")


·分页：
	1.使用分页插件pageHelper，还是要传入currentPage、pageSize；
	2.数据库分页则根据传入currentPage、pageSize，sql语句中：limit (currentPage-1)*pageSize, pageSize；