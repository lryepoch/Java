
·浮动ip：
	··缺省情况下实例会被赋予固定ip，这时并不能保证实例会马上可以从外面访问到，一般来说需要配置防火墙来允许公共ip，然后建立一条NAT规则从公共ip到私有ip的映射。

	··OpenStack引入了一个叫浮动ip的概念，浮动ip是一些可以从外部访问的ip列表，通常从isp那里买来的。
		浮动ip缺省不会自动赋给实例，用户需要手动从地址池里抓取然后赋给实例。一旦用户抓去后，他就变成这个ip的所有者，可以随意赋给自己拥有的其他实例。如果实例死掉了的话，用户也不会失去这个浮动ip，可以随时赋给其他实例。暂时不支持为了负载均衡多实例共享一个浮动ip。

	··而对于固定ip来说，实例启动后获得的ip也是自动的，不能指定某一个。所以当一个VM歇菜了，再启动也许固定ip就换了一个。
		系统管理员可以配置多个浮动ip池，这个ip池不能指定租户，每个用户都可以去抓取。多浮动ip池是为了考虑不同的isp服务提供商，免得某一个isp出故障带来麻烦。
	
	··如果运行的是企业云，浮动ip池就是那些openstack外的数据中心都能访问到的ip。
		浮动ip机制给云用户提供了很多灵活性，也给系统管理员减少了安全风险，尽量只让OpenStack软件去改防火墙会安全些。



·虚拟机的(虚拟)网络接口相关概念：
	虚拟网络（内部网络，私有网络）：虚拟机的虚拟机网卡所在的私有网络；
	fixed ip：虚拟机网卡在虚拟网络上的IP；
	floating ip: 虚拟网络对应的外部网络上的IP；
	port: 一个网络接口对应一个Port；
	interface: 一个网络接口；



·OpenStack管理虚拟机生命周期的组件是Nova。
	Nova创建虚拟机从后端存储类型分为本地LVM存储和远程分布式存储（例如：Ceph/SheepDog/GlusterFS）。
	从启动方式一般分为镜像启动和卷启动两大类，按启动方式和存储后端可以有4种组合。



·Neutron是OpenStack的网络服务。与Nova Networking不同，Neutron允许您配置高级虚拟网络拓扑。租户专用网络就是一个例子。
	Neutron分为以下抽象：网络，子网和路由器。每个都有模仿物理层的功能。



·DHCP：（动态主机配置协议）是一个局域网的网络协议，一个应用层的协议。指的是由服务器控制一段IP地址范围，客户机登录服务器时就可以自动获得服务器分配的IP地址和子网掩码。
		默认情况下，DHCP作为Windows Server的一个服务组件不会被系统自动安装，还需要管理员手动安装并进行必要的配置。 
		使用openstack4j创建实例可以指定IP或者指定网段，然后DHCP分配IP。
	
	指定的IP可以直接获取了，那DHCP分配的IP如何获取，看了半天API发现可以通过port去获取。
	
	PortListOptions options = PortListOptions.create();
	options.deviceId(serverId);
	List<? extends Port> ports = os3.networking().port().list(options);
	for (Port p : ports){
	     Set<? extends IP> ips = p.getFixedIps();
	     for (IP ip : ips ){
	          System.out.println(ip.getIpAddress());
	     }
	}





