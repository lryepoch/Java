
·Elasticsearch是一个分布式、可扩展、实时的搜索与数据分析引擎。它能从项目一开始就赋予你的数据以搜索、分析和探索的能力，可用于实现全文搜索和实时数据统计。



·相关概念：
	Near Realtime（近实时）：Elasticsearch是一个近乎实时的搜索平台，这意味着从索引文档到可搜索文档之间只有一个轻微的延迟(通常是一秒钟)。

	Cluster（集群）：群集是一个或多个节点的集合，它们一起保存整个数据，并提供跨所有节点的联合索引和搜索功能。每个群集都有自己的唯一群集名称，节点通过名称加入群集。

	Node（节点）：节点是指属于集群的单个Elasticsearch实例，存储数据并参与集群的索引和搜索功能。可以将节点配置为按集群名称加入特定集群，默认情况下，每个节点都设置为加入一个名为elasticsearch的群集。

	Index（索引）：索引是一些具有相似特征的文档集合，类似于MySql中数据库的概念。

	Type（类型）：类型是索引的逻辑类别分区，通常，为具有一组公共字段的文档类型，类似MySql中表的概念。注意：在Elasticsearch 6.0.0及更高的版本中，一个索引只能包含一个类型。

	Document（文档）：文档是可被索引的基本信息单位，以JSON形式表示，类似于MySql中行记录的概念。

	Shards（分片）：当索引存储大量数据时，可能会超出单个节点的硬件限制，为了解决这个问题，Elasticsearch提供了将索引细分为分片的概念。分片机制赋予了索引水平扩容的能力、并允许跨分片分发和并行化操作，从而提高性能和吞吐量。
	
	Replicas（副本）：在可能出现故障的网络环境中，需要有一个故障切换机制，Elasticsearch提供了将索引的分片复制为一个或多个副本的功能，副本在某些节点失效的情况下提供高可用性。




·常用注解：
	@Document：标示映射到Elasticsearch文档上的领域对象
			public @interface Document {
			  //索引库名次，mysql中数据库的概念
			    String indexName();
			  //文档类型，mysql中表的概念
			    String type() default "";
			  //默认分片数
			    short shards() default 5;
			  //默认副本数量
			    short replicas() default 1;
			}


	@Id：表示是文档的id，文档可以认为是mysql中表行的概念
	public @interface Id {
	}


	@Field：
	public @interface Field {
	  //文档中字段的类型
	    FieldType type() default FieldType.Auto;
	  //是否建立倒排索引
	    boolean index() default true;
	  //是否进行存储
	    boolean store() default false;
	  //分词器名次
	    String analyzer() default "";
	}

	//为文档自动指定元数据类型
	public enum FieldType {
	    Text,//会进行分词并建了索引的字符类型
	    Integer,
	    Long,
	    Date,
	    Float,
	    Double,
	    Boolean,
	    Object,
	    Auto,//自动判断字段类型
	    Nested,//嵌套对象类型
	    Ip,
	    Attachment,
	    Keyword//不会进行分词建立索引的类型
	}