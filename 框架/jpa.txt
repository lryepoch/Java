
·JPA(Java Persistence API)是Sun官方提出的Java持久化规范，用来方便大家操作数据库。真正干活的可能是Hibernate,TopLink等等实现了JPA规范的不同厂商,默认是Hibernate。

·Spring Data JPA 支持通过如下形式在Repository接口中定义根据属性查询数据的方法：
	findBy...，readBy...， queryBy...，getBy...，注意： ... 代表属性名称。


·有些时候spring data jpa提供的查询条件满足不了业务需求的时候，可以使用自定义的sql来进行查询。想要使用自定义sql需要使用@Query注解：
	@Query(value="", nativeQuery = true)：
	··nativeQuery = true时，是可以执行原生sql语句，所谓原生sql，也就是说这段sql拷贝到数据库中，然后把参数值给一下就能运行了；【本地SQL】
	··没有nativeQuery = true时，就不是原生sql，而其中的select * from xxx中xxx也不是数据库对应的真正的表名，而是对应的实体名，并且sql中的字段名也不是数据库中真正的字段名，而是实体的字段名。【JPA语法规范的SQL】

	··在SQL上使用占位符的两种方式，第一种是使用":"后加变量的名称，第二种是使用"?"后加方法参数的位置。如果使用":"的话，需要使用@Param注解来指定变量名；如果使用"?"就需要注意参数的位置。
	··使用JPA语句中SQL语句中直接用实体类代表表名，因为在实体类中使用了@Table注解，将该实体类和表进行了关联。


·当自定义sql涉及到删除/修改，插入操作的时候需要加上@Modifying注解。注明当前方法是修改操作。