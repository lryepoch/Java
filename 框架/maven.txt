
·maven构建生命周期：
	[开始]-->[validate]-->[compile]-->[test]-->[package]-->[verify]-->[install]-->[deploy]-->[开始]



·常用命令解释：
	mvn validate	##验证。验证项目是否正确且所有必须信息是可用的

	mvn compile		##编译。将Java源代码文件.java编译成.class文件(jvm执行.class文件生成机器码文件)；编译生成的.class文件和资源输出到target/classes目录下

	mvn test		##测试。使用适当的单元测试框架（例如JUnit）运行测试

	mvn package 	##打包。如果不想直接运行.class文件，可以将其打包。.class文件打包完成后，会在/target目录下生成一个jar文件（动态web工程打war包，Java工程打jar包），
							文件名由<artifactId> 和 <version>组成。
	mvn verify  	##检查。对集成测试的结果进行检查，以保证质量达标

	mvn install		##安装。项目代码将会经过编译[compile]、测试[test]、打包[package]即安装到本地仓库，以供其他项目使用
	
	mvn deploy		##部署。安装并发布到指定远程仓库。/拷贝最终的工程包到远程仓库中，以共享给其他开发人员和工程

	mvn clean 		##清除。清除target目录下以前编译生成的文件及jar包



·新建Maven工程：
	groupId：组织名、包路径。eg：com.crud
	artifactId：项目名。eg：ssm-crud
	version：版本号。略
	packaging：包类型。eg：war




·父子-聚合项目：
	··通过 maven 可以创建父子-聚合项目。 所谓的父子项目，即有一个父项目，有多个子项目。
		这些子项目，在业务逻辑上，都归纳在这个父项目下，并且一般来说，都会有重复的jar包共享。
		所以常用的做法会把重复的jar包都放在父项目下进行依赖，那么子项目就无需再去依赖这些重复的jar包了。子项目虽然没有依赖jar包，但是通过父项目达到了依赖的效果。

	··父项目中，<packaging></packaging>默认是jar, 修改为pom。 这样才可以作为父项目存在。

	··在项目parentMavenProject的基础上创建其子项目，首先右键点击 parentMavenProject， 然后点击 New -> Other -> Maven -Maven Module -> Next。子项目中<parent></parent>表示是引用父项目。




·其他：
	··当idea的按键打包失败时，可用代码：mvn clean package -DskipTests




·Maven标签：
	<optional>：我们自己的jar需要引用一些别的组件，但是提供给别人调用时，别人其实用不上这部分功能，但是因为你自己的pom中依赖了这些jar，导致别人也得依赖这些jar。
				设置optional=true，这样外部应用你的依赖时就可以只依赖需要的依赖就可以了。 
