
·linux：一切皆文件

·linux的发行版说简单点就是将linux内核与应用软件做一个打包。比较知名的发行版有ubuntu/redhat/centos。
	通常服务器使用LAMP(linux+apache+mysql+php)或LNMP(linux+nginx+mysql+php)组合；

·超级权限root用户：#
		一般用户：$

	1.切换用户的命令为：su username 【username是你的用户名哦】
	2.从普通用户切换到root用户，还可以使用命令：sudo su 或者 su
	3.在终端输入exit或logout或使用快捷方式ctrl+d，可以退回到原来用户，其实ctrl+d也是执行的exit命令
	4.在切换用户时，如果想在切换用户之后使用新用户的工作环境，可以在su和username之间加-，例如：【su - root】

	··su root 和 su - root 有什么区别？
		su 后面不加用户是默认切到 root
		su 是不改变当前变量
		su - 是改变为切换到用户的变量
		也就是说su只能获得root的执行权限，不能获得环境变量，而su -是切换到root并获得root的环境变量及执行权限.


·/：最高级的目录；
	在/底下最常用的3个目录：
		/usr：保存用户使用的应用程序和工具；
		/home：用户的主目录，一般以该用户的账户名来命名；
		/root ：超级管理员的主目录，又称根目录。用~表示；


·如果修改系统配置，就去 /etc 找，如果修改用户的应用程序配置，就在用户家目录的隐藏文件里找。
	你在命令行里可以直接输入使用的命令，其可执行文件一般就在以下几个位置：
	/bin    
	/sbin
	/usr/bin
	/usr/sbin
	/usr/local/bin
	/usr/local/sbin
	/home/USER/.local/bin
	/home/USER/.local/sbin
	如果你写了一个脚本/程序，想在任何时候都能直接调用，可以把这个脚本/程序添加到上述目录中。
	如果某个程序崩溃了，可以到 /val/log 中尝试寻找出错信息，到 /tmp 中寻找残留的临时文件。



·在 Linux 系统中，进程和线程几乎没有区别。

------------------------
·常用指令操作【Linux命令严格区分大小写】：

	··文件夹/目录：
		man ls 		#显示指定命令【这里指代ls】的帮助信息
		pwd			#查看当前目录完整路径；
		ls -l 		#详细显示当前目录下的所有文件，后面加文件名可以单独显示该文件；
		ls -l /		#查看/目录下的所有文件
		ls -all		#查看所有文件夹和文件。（包括隐藏的）
		du  		#显示目录或者文件大小
		cd 目录名   #切换目录
		cd ..       #切换到当前目录的上级目录

		mkdir <dire>       			#创建目录
		mkdir <dire1> <dire2>   	#创建2个同级目录
		mkdir -p <dire1>/<dire2>  	#递归创建子目录

		rmdir <dire> 				#删除目录
		rmdir -p <dire1>/<dire2>	#递归删除目录，即当子目录被删除时，其父目录为空时也一同被删除。否则只删除子目录。

		find 目录/文件名        #查找指定目录或者文件


	··文件：
		touch 文件名          #新建空文件
		vi 文件名               #打开文件
		echo  写入的内容>文件名

		查看文件内容：
			cat xxx                    #由第一行开始显示文件内容。注意：这是一种不进入文件中的查看；
			cat xxx | grep 'yyy'	#查看xxx文件中带有yyy内容的部分；
			cat -n file1 file2		#一次性查看多个文件，-n参数表示显示行号，从1开始编号；
			
			tac xxx                #从最后一行开始显示，可以看出 tac 是 cat 的倒着写！
			nl xxx                 #显示的时候，顺道输出行号！
			more xxx               #一页一页的显示文件内容
			less xxx               #与 more 类似，但是比 more 更好的是，他可以往前翻页！
			head xxx               #只看头几行
			tail xxx               #只看尾巴几行
			你可以使用 man [命令]来查看各个命令的使用文档，如 ：man cp。


		rm 文件名称           #删除文件
		rm –i mydirectory/*   :（删除mydirectory目录下的所有文件，-i表示删前询问）			
		rm -f 文件名           #删除不为空的文件	

		rm -rf var/usr/epd     #rm用于删除Linux中的文件。可以添加参数用来删除目录。例如，递归地删除目录，使用递归选项-r或-R，如果目录是受写保护的，则会提示是否继续删除目录和目录中的文件作为一个整体。-f 强制删除而不被提示。

		rm -f var/usr/epd/test.html     #强制删除文件，这里不用加r，因为绝对文件路径就是test.html了

		cp：复制文件。    cp myfile* ./mydirectory     （将当前目录下myfile开头的文件复制到当前目录的子目录mydirectory）

		mv：移动文件或者重命名。	mv ../mydirectory/myfile1 student21   （将mydirectory子目录下的myfile1移动到当前目录的子目录student21下）

		grep 'test' d*　　		#显示所有以d开头的文件中包含test的行


	··进程：
		jps                                 #查看当前运行的jdk进程
		ps -a                               #查看已经运行的进程
		ps									#显示当前进程的状态

		ps -aux/ps -ef               			#查看所有进程

		ps -aux|grep java 						#查看java进程

		ps –ef|grep tomcat 					#查看所有有关tomcat的进程

		netstat -lnp | grep 8090            #查看指定端口是否在运行

		kill PID[进程号]						#结束进程
		kill -s 9 PID[进程号]  					#强制杀死进程

		lsof -i:端口号                #用于查看某一端口的占用情况，比如查看22号端口使用情况，lsof -i:22


	··系统级：
		cat /etc/redhat-release		#查看系统版本
		echo string键 				#将string的值输出到屏幕上，说明：方便查看系统环境变量等信息
		who                         #显示目前登入系统的用户信息
		clear						#清屏
		uptime        				#显示系统运行了多长时间

		reboot        				#立即重启，效果等同于shutdown -r now
		poweroff					#立即关机，效果等同于shutdown -h now，在多用户模式下(Run Level 3）不建议使用
		halt             			#不理会目前系统状况下，进行硬件关机，一般不建议使用

		shutdown -h now  --立即关机  
		shutdown -h 10:53  --到10:53关机，如果该时间小于当前时间，则到隔天  
		shutdown -h +10  --10分钟后自动关机  
		shutdown -r now  --立即重启  
		shutdown -r +30 'The System Will Reboot in 30 Mins'   --30分钟后重启并并发送通知给其它在线用户

		查看防火墙的状态的命令为：sudo systemctl status firewalld

		打开防火墙的方式有两种，一种是打开后重启会恢复回原来的状态，命令为：sudo systemctl start firewalld

		另一种是打开后重启不会恢复到原来的状态，命令为：sudo systemctl enable firewalld，这种方式输入命令后要重启系统才会生效。

		关闭防火墙的方式也有两种，和打开相对应，命令分别为：sudo systemctl stop firewalld；sudo systemctl disable firewalld






-------------------------
·上传下载操作：
	安装lrzsz：# yum -y install lrzsz
	这样就可以正常使用rz、sz命令，上传、下载数据；

	上传文件：# rz filename

	下载文件：# sz filename

	rz上传文件乱码：使用 rz -be

					-b：–binary  用binary的方式上传下载，不解释字符为ascii；
					-e：–escape  强制escape 所有控制字符，比如Ctrl+x，DEL等。




-------------------------
·vim /etc/host/
·vi(编辑)分为三种状态：

	··命令模式（command mode）：控制屏幕光标的移动；字符、字或行的删除；移动复制某区段及进入insert mode下或者到last line mode。	操作vi/vim，首先进入命令模式；
		命令模式（command mode）功能键：
		1、插入模式
			按「i」切换进入插入模式「insert mode」，按“i”进入插入模式后是从光标当前位置开始输入文件；
			按「a」进入插入模式后，是从目前光标所在位置的下一个位置开始输入文字；
			按「o」进入插入模式后，是插入新的一行，从行首开始输入文字。

		2、从插入模式切换为命令模式：按「ESC」键。

		3、移动光标vi可以直接用键盘上的光标来上下左右移动，但正规的vi是用小写英文字母「h」、「j」、「k」、「l」，分别控制光标左、下、上、右移一格。

	··插入模式（Insert mode）：只有在Insert mode下，才可以做文字输入，按「ESC」键可回到命令行模式。

	··底行模式（last line mode）：将文件保存或退出vi，也可以设置编辑环境，如寻找字符串、列出行号等。不过一般使用时把vi简化成两个模式，就是将底行模式（last line mode）也算入命令行模式command mode）。


	··vi/vim完毕后的保存命令：
		按ESC键跳到命令模式，然后：
									:w 保存文件但不退出vi
									:w file 将修改另外保存到file中，不退出vi
									:w! 强制保存，不退出vi
									:wq 保存文件并退出vi
									:wq! 强制保存文件，并退出vi
									:q 不保存文件，退出vi
									:q! 不保存文件，强制退出vi
									:e! 放弃所有修改，从上次保存文件开始再编辑。

		权限问题：如编辑hosts文件，遇到Can't open file for writing ！
		解决方法：sudo vi /etc/hosts这条指令进入即可；




------------------------
·Linux运行jar包命令：
	··java -jar XXX.jar 		#当前ssh窗口被锁定，可按CTRL + C打断程序运行，或直接关闭窗口，程序退出
	··java -jar XXX.jar & 		#当前ssh窗口不被锁定，但是当窗口关闭时，程序中止运行。 &代表在后台运行

	··nohup java -jar XXX.jar &		#nohup意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行。当用nohup命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中，除非另外指定了输出文件。

	··nohup java -jar XXX.jar >temp.txt & 		#command >out.file是将command的输出重定向到out.file文件，即输出内容不打印到屏幕上，而是输出到out.file文件中。

	··通过jobs命令查看后台运行任务：jobs会列出所有后台执行的作业，并且每个作业前面都有个编号。
	··如果想将某个作业调回前台控制，只需要 fg + 编号即可，eg：fg 23
	··查看某端口占用的线程的pid：netstat -nlp |grep 9181 

	··如何查看nohup.out里面的日志，在当前目录下输入:

		tail [ -f ] [ -c Number | -n Number | -m Number | -b Number | -k Number ] [ File ] 
		参数解释： 
				-f 该参数用于监视File文件增长。 
				-c Number 从 Number 字节位置读取指定文件 
				-n Number 从 Number 行位置读取指定文件。 
				-m Number 从 Number 多字节字符位置读取指定文件，比方你的文件假设包括中文字，假设指定-c参数，可能导致截断，但使用-m则会避免该问题。 
				-b Number 从 Number 表示的512字节块位置读取指定文件。 
				-k Number 从 Number 表示的1KB块位置读取指定文件。 

				File 指定操作的目标文件名称 上述命令中，都涉及到number，假设不指定，默认显示10行。
				Number 前面可使用正负号，表示该偏移从顶部还是从尾部開始计算。 
				tail可运行文件一般在/usr/bin/以下。

		tail notes.log 			#显示notes.log文件的最后10行

		tail -n 20 notes.log 	#显示notes.log最后20行

		tail -f notes.log 		#显示notes.log文件的最后10行，然后实时跟踪名为notes.log的文件的增长情况

		tail -fn 20 notes.log   #显示notes.log文件的最后20行，然后实时跟踪其增长情况

		tail -c 10 notes.log 	#显示文件notes.log的最后10个字符




·登录http服务器：ssh ip；
 登录ftp服务器：ftp ip；