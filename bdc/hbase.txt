
·HBase是BigTable的开源（源码使用Java编写）版本。是ApacheHadoop的数据库，是建立在HDFS之上，实现对大型数据的实时、随机的读写访问。
	HBase 依赖于 HDFS 做底层的数据存储，BigTable 依赖 Google GFS 做数据存储；
	HBase 依赖于 MapReduce 做数据计算，BigTable 依赖 Google MapReduce 做数据计算；
	HBase 依赖于 ZooKeeper 做服务协调，BigTable 依赖 Google Chubby 做服务协调；

·HBase – Hadoop Database，是一个高可靠性、高性能、面向列、可伸缩的分布式存储系统，利用HBase技术可在廉价PC Server上搭建起大规模结构化存储集群。




·HBase能够“快速地”“分布式地”处理“大量数据”，基于它的
　　1.内存结构
　　2.文件存储结构


·要点：
	它介于 NoSQL 和 RDBMS 之间，仅能通过主键(rowkey)和主键的 range 来检索数据；
	HBase 查询数据功能很简单，不支持 join 等复杂操作；
	不支持复杂的事务，只支持行级事务(可通过 hive 支持来实现多表 join 等复杂操作)；
	HBase中支持的数据类型：byte[]（底层所有数据的存储都是字节数组）；
	主要用来存储结构化和半结构化的松散数据。


·表特点：
	大：一个表可以有上十亿行，上百万列；
	面向列：面向列（族）的存储和权限控制，列（族）独立检索；
	稀疏：对于为空的列，并不占用存储空间，因此表可以设计的非常稀疏；
	无模式：每行都有一个可排序的主键和任意多的列，列可以根据需要动态的添加，同一张表中不同的行可以有截然不同的列；



数据结构：
------------------
·命名空间 namespace
	··命名空间相当于mysql 的database。命名空间中包括了表、权限等信息;

·Table
	··表（相当于mysql中的表），所有的表都是 namespace 的成员，即表必属于某个命名空间，如果没有指定，则在 default 默认的命名空间中；

·Rowkey
	··Rowkey的概念和mysql中的主键是完全一样的，Hbase使用Rowkey来唯一的区分某一行的数据；

	··rowkey 行键可以是任意字符串(最大长度是 64KB，实际应用中长度一般为 10-100bytes)，最好是 16。在 HBase 内部，rowkey 保存为字节数组。HBase 会对表中的数据按照 rowkey 排序 (字典顺序)；

	··HBase只支持3种查询方式：
		···通过单个 RowKey 访问；
		···基于Rowkey的范围（正则）扫描；
		···全表扫描；

·Column：列，可理解成mysql列；
		HBASE 表中的每个列，都归属于某个列族。列族是表的 schema 的一部分(而列不是)，必须在使用表之前定义。列名都以列族作为前缀。例如 courses:history，courses:math都属于 courses 这个列族。列都是插入数据时增加的，不同的数据行可能拥有不同的列。


·Column Family
	··列族, HBase引入的概念。
	··Hbase通过列族划分数据的存储，列族下面可以包含任意多的列，实现灵活的数据存取。就像是家族Family的概念，我们知道一个家族是由于很多个的家庭组成的。列族也类似，列族是由一个一个的列组成（任意多）。
	··Hbase表的创建的时候就必须指定列族。就像关系型数据库创建的时候必须指定具体的列(字段)是一样的。
	··Hbase的列族不是越多越好，官方推荐的是列族最好小于或者等于3。我们使用的场景一般是1个列族。


·Cell
	··由{rowkey, column Family:columu, version} 唯一确定的单元。cell 中的数据是没有类型的，全部是字节码形式存贮。


·TimeStamp
	··timestamp是实现hbase多版本的关键；在hbase中使用不同timestamp来标识相同rowkey行对应的不同版本的数据；
	··hbase中通过rowkey和columns确定的为一个存储单元，称为cell；每个cell都保存着同一份数据的多个版本，版本通过时间戳来索引；

	··时间戳由hbase(在数据写入时自动)赋值，此时时间戳是精确到毫秒的当前系统时间。时间戳也可以由客户显式赋值。如果应用程序要避免数据版本冲突，就必须自己生成具有唯一性的时间戳。
		每个cell中，不同版本的数据按照时间倒序排序，即最新的数据排在最前面；
	
	··为了避免数据存在过多版本造成的管理（包括存储和索引）负担，hbase提供了两种数据版本回收方式：
		保存数据的最后n个版本;
		保存最近一段时间内的版本（设置数据的生命周期TTL）;
		用户可以针对每个列簇进行设置；





·Apache HBase从0.98.0, 0.95.2两个版本开始支持 namespace级别的授权操作：
	包括以下5种权限，
	Read(R) 允许读取权限
	Write(W) 允许写入权限
	Execute(X) 允许执行权限
	Create(C) 允许建表、删表权限
	Admin(A) 允许管理操作，如balance、split、snapshot等




·常用指令：

klist
hbase shell
list_namespace


